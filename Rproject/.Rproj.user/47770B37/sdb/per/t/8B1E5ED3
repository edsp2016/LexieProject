{
    "contents" : "---\ntitle: 'Part II: Modeling and conclusion'\nauthor: \"Siyang Sun\"\ndate: \"May 10, 2016\"\noutput: html_document\n---\nMy whole data set after cleaning is stored in the data-file folder, called \"all data\". For modeling part, some of the columns are meaningless. So I used the subset of whole data set for modeling, which is called \"modeling\" in the same folder. Feel free to use that dataset if you just want to go through the modeling part.\n# Modeling\n```{r}\nda<-read.table(\"/Users/mac/Dropbox/EDSP/modeling.txt\",header=T)\nda$adjusted.1<-NULL\nsummary(da)\n#theater,adow,rn,to_rating\n```\nVariables including theater, number of reviews and rating (rotten tomatoes), opening weekend have more than 20% missing values,drop them from regression models.\n## Part 1: Linear regression models\n### 1.Variable selection startegy\nFirst check the correlation between variables. Highly correlated variables could result in collinearity. The correlation coefficients results are stored in corr_table2; it turns out that the award data(times of winning and nomitation) are highly correlated. \nSecond check the skewness and make some variables transformation. \nI use log transformation on variables including: adjusted,adow,bb and all movie award data, and stored them as new variables.\n```{r,echo=FALSE}\nlibrary(ggplot2)\ncorr_table2<-round(cor(subset(na.omit(da),select=c(adjusted,adow,adbudget,theater,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))),2)\n#ggplot(melt(corr_table2), aes(x=Var1, y=Var2, fill=value))+geom_tile()\n#movie awards data have high correlation,collinearity should be considered.\n#variable transformation\n#normal variables: rating,runt\nda$logadjusted<-log(da$adjusted)\nqplot(da$adjusted, geom=\"histogram\",stat=\"count\")\nqplot(da$logadjusted, geom=\"histogram\",stat=\"count\")\nda$logadow<-log(da$adow)\nda$logbb<-log(da$bb)\nda$lgadbug<-log(da$adbudget)\nda$lgdir_win<-log(da$dir_win)\nda$lgdir_nomi<-log(da$dir_nomi)\nda$lgst1_win<-log(da$st1_win)\nda$lgst1_nomi<-log(da$st1_nomi)\nda$lgst2_win<-log(da$st2_win)\nda$lgst2_nomi<-log(da$st2_nomi)\nda$lgdir_win<-gsub(\"-Inf\",\"NA\",da$lgdir_win)\nda$lgdir_nomi<-gsub(\"-Inf\",\"NA\",da$lgdir_nomi)\nda$lgst1_win<-gsub(\"-Inf\",\"NA\",da$lgst1_win)\nda$lgst1_nomi<-gsub(\"-Inf\",\"NA\",da$lgst1_nomi)\nda$lgst2_win<-gsub(\"-Inf\",\"NA\",da$lgst2_win)\nda$lgst2_nomi<-gsub(\"-Inf\",\"NA\",da$lgst2_nomi)\nda$lgdir_win<-as.numeric(da$lgdir_win)\nda$lgdir_nomi<-as.numeric(da$lgdir_nomi)\nda$lgst1_win<-as.numeric(da$lgst1_win)\nda$lgst1_nomi<-as.numeric(da$lgst1_nomi)\nda$lgst2_win<-as.numeric(da$lgst2_win)\nda$lgst2_nomi<-as.numeric(da$lgst2_nomi)\n#adbudget theater to_rating rn still have skewness after log transformation.\n```\n### 2. baseline model\n```{r}\n#all potentialdependent variables:logadjusted,logbb\n#all potential independent variables:studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+lgdir_win+lgdir_nomi+lgst1_win+lgst1_nomi+lgst2_win+lgst2_nomi\nres0<-lm(logadjusted~lgadbug,na.omit(da))\n#summary(res0)\n#lapply(da,class)\n```\n### 3. model selection\n+ Case 1: Outcome variable: domestic box office (adjusted)\n```{r}\nresfull<-lm(logadjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+lgdir_win+lgdir_nomi+lgst1_win+lgst1_nomi+lgst2_win+lgst2_nomi,na.omit(da))\n#summary(resfull)\n#adjusted R square 55.68%. AIC=89.36614\nlibrary(MASS)\n#step<-stepAIC(resfull,direction=\"backward\")\nres1<-lm(logadjusted~studio+release_year+genre1+rating+runt+per+factor(sh)+series+lgdir_win+lgdir_nomi+lgst2_nomi,na.omit(da))\n#summary(res1)\n#adjusted R^2 61.86% AIC=75.009 BIC=186.9145\nn<-nrow(na.omit(da))\n#stepBIC<-step(resfull,direction = \"both\",k=log(n))\nres1_1<-lm(logadjusted ~ release_year + rating + series + lgadbug,na.omit(da))\n#summary(res1_1)\n#R^2 33.14%, delete\n```\n+ Case 2: Outcome variable: domestic box office revenue/ movie budget (adjusted)\n```{r}\nresfull2<-lm(logbb~studio+release_year+genre1+mpaa+rating+runt+per+as.factor(sh)+series+lgdir_win+lgdir_nomi+lgst1_win+lgst1_nomi+lgst2_win+lgst2_nomi,na.omit(da))\n#summary(resfull2)\n#adjusted R square 55.41%.\n#step2<-stepAIC(resfull2,direction=\"backward\")\nres2<-lm(logbb~studio+release_year+genre1+mpaa+rating+runt+per+as.factor(sh)+lgdir_win+lgst1_win +lgst1_nomi,na.omit(da))\n#summary(res2)\n#adjusted R square 57% AIC=117.6126\n```\n### 4.variables transformation \n```{r}\nda$dir<-log(0.75*da$dir_win+0.25*da$dir_nomi)\nda$st1<-log(0.75*da$st1_win+0.25*da$st1_nomi)\nda$st2<-log(0.75*da$st2_win+0.25*da$st2_nomi)\nqplot(da$dir, geom=\"histogram\",stat=\"count\")\nresnew<-lm(logadjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+dir+st1+st2,na.omit(da))\n#summary(resnew)\n# R^2 53.69% AIC 93.0\n#step3<-stepAIC(resnew,direction=\"backward\")\nres3<-lm(logadjusted ~ studio + release_year + genre1 + rating + runt + per + series + lgadbug,na.omit(da))\n#summary(res3)\n#R^2 55.97% AIC 86.20\nresnew2<-lm(logbb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+dir+st1+st2,na.omit(da))\n#summary(resnew2)\n#52.2%\n#step4<-stepAIC(resnew2,direction=\"backward\")\nres4<-lm(logbb ~ studio + release_year + genre1 +mpaa+ rating + per+ dir,na.omit(da))\n#summary(res4)\n#55.43%,AIC=118.8446\n```\nWhat if we ignore the normality assumption and stop making log transformation?\n```{r}\nresfull3<-lm(adjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi,na.omit(da))\n#step5<-stepAIC(resfull3,direction=\"backward\")\nres5<-lm(adjusted ~ studio + release_year + genre1 + rating + runt + per + \n    series + dir_win + dir_nomi + st2_win + st2_nomi,na.omit(da))\n#summary(res5)\nresfull4<-lm(bb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi,na.omit(da))\n#step6<-stepAIC(resfull4,direction=\"backward\")\nres6<-lm(bb ~ studio + release_year + genre1 + mpaa + rating + runt,na.omit(da))\n#summary(res6)\n#42.08%,AIC=1182.888\n```\n### 5. conclusion\n| Model name    |    Outcome   | Adjusted R^2|     AIC     |\n|:-------------:|:------------:|:-----------:|:-----------:|\n|      res1     |log(adjusted) |     61.86%  |   75.009    |\n|      res2     |   log(bb)    |       57%   |     117     |\n|      res3     |log(adjusted) |     55.97%  |    86.20    |\n|      res4     |   log(bb)    |     55.43%  |   118.845   |\n|      res5     |   adjusted   |     47.73%  |  1171.801   |\n|      res6     |      bb      |     45.89%  |  308.9774   |\nThe first model has the highest adjusted R^2 and the smallest AIC, in this case I choose res 1.\nThe log adjusted domestic box office revenue is the outcome.\n```{r}\nsummary(res1)\nlayout(matrix(c(1,2,3,4),2,2))\nplot(res1,cex=0.5)\ndeviance(res1)\nmean(res1$residuals^2)\n#mse,0.051 deviance 4.79\n```\nThe residual diagnostic seems fine.\nFrom the model coefficients,\nsome variables including IMDb rating, non holiday seanson (ns&ss), series movie, director's times of winning awards show a significant positive effect on the box office. \nOn the other hand,war movies or movies which is distributed by Par. show a significant negative effect on the box office. (at 0.01 significant level.)\n## Part 2: Regression decision tree\nRegression decision tree is better when facing some missing values. \n### necessary tree packages in R\n```{r}\n#regression decision tree\n#install.packages(\"rpart\")\n#install.packages(\"tree\")\n#install.packages(\"rpart.plot\")\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(tree)\n```\n\n```{r}\n#rpart package\nfrmla<-bb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+rn+to_rating+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi\n#frm2<-bb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+rn+to_rating+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi\nfit<-rpart(frmla,method=\"anova\",data=da,minbucket=10)\nprintcp(fit)\npar(mfrow=c(1,1))\nplotcp(fit) # visualize cross-validation results\nsummary(fit) # detailed summary of splits\nrpart.plot(fit)\npredict_tree<-predict(fit,da)\ntree_rmse<-mean((predict_tree-da$bb)^2,na.rm=TRUE)\n#tree mse: 12.4464\n# tree package\nfrmla_tree<-bb~mpaa+rating+runt+per+sh+series+rn+to_rating+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi+genre1\ntree<-tree(frmla_tree,data=da)\nsummary(tree)\nplot(tree);text(tree)\n#deviance:(mean square error): 16.01\n```\n## Part 3: Random Forest\npackages\n```{r}\n#install.packages(\"randomForest\")\nlibrary(randomForest)\n```\n\n```{r}\nforestModel=randomForest(frmla,na.omit(da),ntree=500,importance=T)\nprint(forestModel)\nvu = varUsed(forestModel, count=TRUE)\nvusorted = sort(vu, decreasing = FALSE, index.return = TRUE)\ndotchart(vusorted$x, names(forestModel$forest$xlevels[vusorted$ix]))\nvarImpPlot(forestModel)\n#mse:1.86\n```\n## Conclusion\n|   Model type    |     Outcome    |      MSE      |    Deviance   |\n|:---------------:|:--------------:|:-------------:|:-------------:|\n|linear regression|  log(adjusted) |      0.05     |      4.79     |\n| decision tree   |adjusted/budget |      12.4     |      12.4     |\n| random forest   |adjusted/budget |      1.86     |      1.86     |\n\n\n\n|   Model type    |     Outcome    |    Positive factor    |    Negative factor    |\n|:---------------:|:--------------:|:---------------------:|:---------------------:|\n|linear regression|  log(adjusted) | rating,series, dirwin |      genre (war)      |\n| decision tree   |adjusted/budget |         release_year,studio,genre             |\n| random forest   |adjusted/budget | genre, stnomi, mpaa, stwin,studio,runt,rating |\n\n\n\n",
    "created" : 1462893737279.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "806561188",
    "id" : "8B1E5ED3",
    "lastKnownWriteTime" : 1463153966,
    "path" : "~/Dropbox/EDSP/project/Part II.Rmd",
    "project_path" : "Part II.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}