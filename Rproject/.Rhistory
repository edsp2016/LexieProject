ggplot(dtam,aes(x=variable,y=value,fill =ind)) + geom_bar(position = "fill",stat = "identity")+
scale_y_continuous(labels = percent_format())
library(scales)
ggplot(dtam,aes(x=variable,y=value,fill =ind)) + geom_bar(position = "fill",stat = "identity")+
scale_y_continuous(labels = percent_format())
hist(df$domestic,col='lightblue',xlim=c(0,800),breaks=50,border=F,main = paste("Histogram of Movie Financials-domestic adjusted VS unadjusted"))
hist(df$adjusted,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(log(df$adjusted),col=scales::alpha('purple',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(df$domestic,col='lightblue',xlim=c(0,800),breaks=50,border=F,main = paste("Histogram of Movie Financials-domestic adjusted VS unadjusted"))
hist(df$adjusted,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(log(df$adjusted),col=scales::alpha('purple',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(df$domestic,col='lightblue',xlim=c(0,800),breaks=50,border=F,main = paste("Histogram of Movie Financials-domestic adjusted VS unadjusted"))
hist(df$adjusted,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(log(df$adjusted),col=scales::alpha('purple',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(log(df$adjusted),col=scales::alpha('purple',.5),xlim=c(0,800),breaks=500,border=F)
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(studio)), color=factor(studio)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
barplot(table(df$studio))
ggplot2.histogram(data=df, xName='adjusted',groupName='studio',legendPosition="top")
unique(df$genre1)
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
barplot(table(df$genre1))
qplot(x=per, y=stat, fill=genre1,data=df, geom="bar", stat="identity",position="dodge")
qplot(x=per, y=count, fill=genre1,data=df, geom="bar", stat="identity",position="dodge")
qplot(x=per, y=count, fill=genre1,data=df, geom="bar")
qplot(x=per, y=mean, fill=genre1,data=df, geom="bar")
barplot(table(df$genre1))
barplot(sort(table(df$genre1)))
df$count<-1
ggplot(df,aes(x=factor(per),y=count,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
df$count<-NULL
barplot(sort(table(df$genre1)))
barplot(sort(table(df$genre1)),col="rainbow")
barplot(table(df$genre1,df$per))
barplot(table(df$genre1,df$per),legend = rownames(counts), beside=TRUE)
counts<-table(df$genre1,df$per)
counts
barplot(table(df$genre1,df$per),legend = colnames(counts), beside=TRUE)
unique(df$genre1)
barplot(table(df$genre1,df$per),legend = colnames(counts),col=rainbow(24), beside=TRUE)
barplot(table(df$genre1,df$per),legend = colnames(counts),col=rainbow(24))
barplot(table(df$genre1,df$per),legend = colnames(counts),col=rainbow(24),besides=T)
barplot(table(df$genre1,df$per),legend = colnames(counts),col=rainbow(24),beside=T)
barplot(table(df$genre1,df$per),legend = colnames(counts),col=rainbow(24),beside=T)
barplot(table(df$genre1,df$per),legend = rownames(counts),col=rainbow(24),beside=T)
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplot(df,aes(x=factor(per),y=mean(adjusted),fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
barplot(table(df$genre1,df$per),legend = rownames(counts),col=rainbow(24),beside=T)
ggplot(df,aes(x=factor(per),y=occurence,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=count,position=position_dodge(),geom="bar")
ggplot(df,aes(x=factor(per),fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplot(df, aes(per, fill=genre1)) + geom_bar(position="dodge")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplot(df, aes(per, fill=genre1)) + geom_bar(position="dodge")
ggplot(df, aes(per, fill=studio)) + geom_bar(position="dodge")
ggplot(df, aes(year, fill=studio)) + geom_bar(position="dodge")
ggplot(df, aes(release_year, fill=studio)) + geom_bar(position="dodge")
ggplot(df[df$release_year>1979,], aes(release_year, fill=studio)) + geom_bar(position="dodge")
ggplot(df[df$release_year>1989,], aes(release_year, fill=studio)) + geom_bar(position="dodge")
ggplot(df[df$release_year>2000,], aes(release_year, fill=studio)) + geom_bar(position="dodge")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=sum,position=position_dodge(),geom="bar")
ggplot(df[df$release_year>2000,], aes(release_year, fill=studio)) + geom_bar(position="dodge")
ggplot(df, aes(per, fill=genre1)) + geom_bar(position="dodge")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=sum,position=position_dodge(),geom="bar")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
hist(df$adjusted[df$shb==0],col='lightblue',xlim=c(0,800),breaks=50,border=F,main = paste("Histogram of Movie Financials-super hero movie VS others"))
hist(df$adjusted[df$shb==0],col='lightblue',xlim=c(0,800),breaks=200,border=F,main = paste("Histogram of Movie Financials-super hero movie VS others"))
hist(df$adjusted[df$shb==1],col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(df$adjusted[df$shb==1],col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,border=F)
hist(df$adjusted[df$shb==0],col='lightblue',breaks=200,border=F,main = paste("Histogram of Movie Financials-super hero movie VS others"))
The total revenue distribution of holiday season movie is different from other two seasons.
hist(df$adjusted[df$shb==1],col=scales::alpha('pink',.5),breaks=500,border=F)
hist(df$adjusted[df$shb==1],col=scales::alpha('pink',.9),breaks=500,border=F)
hist(df$adjusted[df$shb==1],col=scales::alpha('pink',.9),breaks=50,border=F)
hist(df$adjusted[df$shb==0],col='lightblue',breaks=200,border=F,main = paste("Histogram of Movie Financials-super hero movie VS others"))
hist(df$adjusted[df$shb==0],col='lightblue',xlim=c(0,800),breaks=200,border=F,main = paste("Histogram of Movie Financials-super hero movie VS others"))
hist(df$adjusted[df$shb==1],col=scales::alpha('pink',.9),breaks=50,add=T,border=F)
ggplot(df,aes(x=adjusted)) +
geom_histogram(data=df[df$shb==0,],fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(df,aes(x=adjusted)) +
geom_histogram(sample(data=df[df$shb==0,],30),fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(df,aes(x=adjusted)) +
geom_histogram(data=df[df$shb==0,]),fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(df,aes(x=adjusted)) +
geom_histogram(data=df[df$shb==0,]),fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(adjusted, aes(factor(sh), df))
ggplot(df, aes(factor(sh),adjusted))
ggplot(df, aes(factor(sh),adjusted))+geom_boxplot(aes(fill = factor(sh)))
ggplot(df, aes(factor(shb),adjusted))+geom_boxplot(aes(fill = factor(shb)))
View(df)
View(df)
hist(df$rating,col='lightblue',xlim=c(0,10),breaks=20,border=F,main=paste("Histogram of Movie ratings"))
hist(df$to_rating/10,col=scales::alpha('pink',.5),xlim=c(0,10),breaks=20,add=T,border=F)
top<-subset(df,number<=50, select = c(rank,worldwide, domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))
top$rank <- with(top, reorder(rank, adjusted))
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
ggplot(top.m, aes(variable,rank)) + geom_tile(aes(fill = rescale),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
library("dplyr")
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
library("tidyr")
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
library("ggplot2")
top<-subset(df,number<=50, select = c(rank,worldwide, domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))
top$rank <- with(top, reorder(rank, adjusted))
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
library(ggplot2)
top<-subset(df,number<=50, select = c(rank,worldwide, domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))
top$rank <- with(top, reorder(rank, adjusted))
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
corr_table<-round(cor(subset(na.omit(df),select=c(worldwide,domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))),2)
ggplot(melt(corr_table), aes(x=Var1, y=Var2, fill=value))+geom_tile()
hist(df$bb,col='purple2',border=F,xlim=c(0,20),breaks=100,main = paste("Histogram of revenue/budget ratio"))
qplot(df$adjusted, geom="histogram",stat="count")
qplot(df$bb, geom="histogram",stat="count")
ggplot(df, aes(x=adjusted))+geom_histogram(binwidth=10)
hist(df$domestic,col='lightblue',xlim=c(0,800),breaks=50,border=F,main = paste("Histogram of Movie Financials-domestic adjusted VS unadjusted"))
hist(df$adjusted,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
library(ggplot2)
top<-subset(df,number<=50, select = c(rank,worldwide, domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))
top$rank <- with(top, reorder(rank, adjusted))
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
library(pylr)
library(plyr)
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
ggplot(top.m, aes(variable,rank)) + geom_tile(aes(fill = rescale),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
dirlist<-df$number[unique(df$director1)]
dta<-data.frame(df$director1[dirlist],df$dir_win[dirlist],df$dir_nomi[dirlist])
names(dta)[1]<-paste("name")
names(dta)[2]<-paste("winning")
names(dta)[3]<-paste("nomitation")
dta.m<-melt(dta)
dta.m <- ddply(dta.m,.(variable),transform,rescale = rescale(value))
ggplot(dta.m, aes(variable,name)) + geom_tile(aes(fill = rescale),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
dirlist<-dirlist[1:50]
dta<-data.frame(df$director1[dirlist],df$dir_win[dirlist],df$dir_nomi[dirlist])
names(dta)[1]<-paste("name")
names(dta)[2]<-paste("winning")
names(dta)[3]<-paste("nomitation")
dta.m<-melt(dta)
dta.m <- ddply(dta.m,.(variable),transform,rescale = rescale(value))
ggplot(dta.m, aes(variable,name)) + geom_tile(aes(fill = rescale),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
hist(df$dir_win)
ggplot(df,aes(x=times of winning an award)) +
ggplot(df,aes(x=xx)) +
geom_histogram(data=df$dir_win,fill = "red", alpha = 0.2) +
geom_histogram(data=df$st1_win,fill = "blue", alpha = 0.2) +
geom_histogram(data=df$st2_win,fill = "green", alpha = 0.2)
ggplot(df,aes(x=xx)) +
geom_histogram(data=as.numeric(df$dir_win),fill = "red", alpha = 0.2) +
geom_histogram(data=as.numeric(df$st1_win),fill = "blue", alpha = 0.2) +
geom_histogram(data=as.numeric(df$st2_win),fill = "green", alpha = 0.2)
View(dta)
View(dta)
hist(df$dir_win,col='lightblue',xlim=c(0,200),breaks=50,border=F,main = paste("Histogram of Movie awards data"))
hist(df$st1_win,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
hist(df$st1_win,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,border=F)
hist(df$st1_win,col='lightblue',xlim=c(0,200),breaks=50,border=F,main = paste("Histogram of Movie awards data"))
hist(df$dir_win,col='lightblue',xlim=c(0,200),breaks=50,border=F,main = paste("Histogram of Movie awards data"))
hist(df$st1_win,col='lightblue',xlim=c(0,200),breaks=50,border=F,main = paste("Histogram of Movie awards data"))
hist(df$st2_win,col=scales::alpha('pink',.5),breaks=500,add=T,border=F)
hist(df$dir_win,col='lightblue',xlim=c(0,200),breaks=50,border=F,main = paste("Histogram of Movie awards data"))
hist(df$dir_nomi,col='lightblue',xlim=c(0,200),breaks=50,border=F,add=T,main = paste("Histogram of Movie awards data"))
ggplot(df,aes(x=adjusted)) +
geom_histogram(data=df[df$series==0,]),fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$series==1,],fill = "blue", alpha = 0.2)
ggplot(df, aes(factor(sh),adjusted))+geom_boxplot(aes(fill = factor(sh)))
ggplot(df,aes(x=adjusted)) +
geom_histogram(data=df[df$series==0,]),fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$series==1,],fill = "blue", alpha = 0.2)
ggplot(df,aes(x=adjusted)) +
geom_histogram(data=df[df$series==0,],fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$series==1,],fill = "blue", alpha = 0.2)
ggplot(df, aes(factor(series),adjusted))+geom_boxplot(aes(fill = factor(sh)))
ggplot(df, aes(factor(series),adjusted))+geom_boxplot(aes(fill = factor(series)))
hist.rcharts <- rPlot(x="bin(rating,1)", y="count(id)", data, type="bar")
da<-read.table("/Users/mac/Dropbox/EDSP/modeling.txt",header=T)
da$adjusted.1<-NULL
summary(da)
ggplot(melt(corr_table2), aes(x=Var1, y=Var2, fill=value))+geom_tile()
corr_table2<-round(cor(subset(na.omit(da),select=c(adjusted,adow,adbudget,theater,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))),2)
ggplot(melt(corr_table2), aes(x=Var1, y=Var2, fill=value))+geom_tile()
da$logadjusted<-log(da$adjusted)
qplot(da$adjusted, geom="histogram",stat="count")
qplot(da$logadjusted, geom="histogram",stat="count")
da$logadow<-log(da$adow)
da$logbb<-log(da$bb)
da$lgadbug<-log(da$adbudget)
da$lgdir_win<-log(da$dir_win)
da$lgdir_nomi<-log(da$dir_nomi)
da$lgst1_win<-log(da$st1_win)
da$lgst1_nomi<-log(da$st1_nomi)
da$lgst2_win<-log(da$st2_win)
da$lgst2_nomi<-log(da$st2_nomi)
da$lgdir_win<-gsub("-Inf","NA",da$lgdir_win)
da$lgdir_nomi<-gsub("-Inf","NA",da$lgdir_nomi)
da$lgst1_win<-gsub("-Inf","NA",da$lgst1_win)
da$lgst1_nomi<-gsub("-Inf","NA",da$lgst1_nomi)
da$lgst2_win<-gsub("-Inf","NA",da$lgst2_win)
da$lgst2_nomi<-gsub("-Inf","NA",da$lgst2_nomi)
da$lgdir_win<-as.numeric(da$lgdir_win)
da$lgdir_nomi<-as.numeric(da$lgdir_nomi)
da$lgst1_win<-as.numeric(da$lgst1_win)
da$lgst1_nomi<-as.numeric(da$lgst1_nomi)
da$lgst2_win<-as.numeric(da$lgst2_win)
da$lgst2_nomi<-as.numeric(da$lgst2_nomi)
res0<-lm(logadjusted~lgadbug,na.omit(da))
summary(res0)
resfull<-lm(logadjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+lgdir_win+lgdir_nomi+lgst1_win+lgst1_nomi+lgst2_win+lgst2_nomi,na.omit(da))
summary(resfull)
View(da)
View(da)
da<-subset(df,select=c(adjusted,studio,release_year,genre,mpaa,theater,rating,runt,per,sh,shb,series,rn,to_rating,bb,adjusted,adbudget,adow,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi,genre1))
write.table(da,"/Users/mac/Dropbox/EDSP/modeling.txt")
da<-read.table("/Users/mac/Dropbox/EDSP/modeling.txt",header=T)
da$adjusted.1<-NULL
da$logadjusted<-log(da$adjusted)
qplot(da$adjusted, geom="histogram",stat="count")
qplot(da$logadjusted, geom="histogram",stat="count")
da$logadow<-log(da$adow)
da$logbb<-log(da$bb)
da$lgadbug<-log(da$adbudget)
da$lgdir_win<-log(da$dir_win)
da$lgdir_nomi<-log(da$dir_nomi)
da$lgst1_win<-log(da$st1_win)
da$lgst1_nomi<-log(da$st1_nomi)
da$lgst2_win<-log(da$st2_win)
da$lgst2_nomi<-log(da$st2_nomi)
da$lgdir_win<-gsub("-Inf","NA",da$lgdir_win)
da$lgdir_nomi<-gsub("-Inf","NA",da$lgdir_nomi)
da$lgst1_win<-gsub("-Inf","NA",da$lgst1_win)
da$lgst1_nomi<-gsub("-Inf","NA",da$lgst1_nomi)
da$lgst2_win<-gsub("-Inf","NA",da$lgst2_win)
da$lgst2_nomi<-gsub("-Inf","NA",da$lgst2_nomi)
da$lgdir_win<-as.numeric(da$lgdir_win)
da$lgdir_nomi<-as.numeric(da$lgdir_nomi)
da$lgst1_win<-as.numeric(da$lgst1_win)
da$lgst1_nomi<-as.numeric(da$lgst1_nomi)
da$lgst2_win<-as.numeric(da$lgst2_win)
da$lgst2_nomi<-as.numeric(da$lgst2_nomi)
#adbudget theater to_rating rn still have skewness after log transformation.
```
### 2. baseline model
```{r}
#all potentialdependent variables:logadjusted,logbb
#all potential independent variables:studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+lgdir_win+lgdir_nomi+lgst1_win+lgst1_nomi+lgst2_win+lgst2_nomi
res0<-lm(logadjusted~lgadbug,na.omit(da))
summary(res0)
#lapply(da,class)
```
### 3. model selection
+ Case 1: Outcome variable: domestic box office (adjusted)
```{r}
resfull<-lm(logadjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+lgdir_win+lgdir_nomi+lgst1_win+lgst1_nomi+lgst2_win+lgst2_nomi,na.omit(da))
summary(resfull)
AIC(resfull)
library(MASS)
step<-stepAIC(resfull,direction="backward")
res1<-lm(logadjusted~studio+release_year+genre1+rating+runt+per+as.facotr(sh)+series+lgdir_win+lgdir_nomi+lgst2_nomi,na.omit(da))
summary(res1)
res1<-lm(logadjusted~studio+release_year+genre1+rating+runt+per+factor(sh)+series+lgdir_win+lgdir_nomi+lgst2_nomi,na.omit(da))
summary(res1)
step<-stepAIC(resfull,direction="backward")
summary(res1)
AIC(res1)
BIC(rew1)
BIC(res1)
n<-nrow(na.omit(da))
stepBIC<-step(resfull,direction = "both",k=log(n))
res1_1<-lm(logadjusted ~ release_year + rating + series + lgadbug,na.omit(da))
summary(res1_1)
resfull2<-lm(logbb~studio+release_year+genre1+mpaa+rating+runt+per+as.factor(sh)+series+lgdir_win+lgdir_nomi+lgst1_win+lgst1_nomi+lgst2_win+lgst2_nomi,na.omit(da))
summary(resfull2)
step2<-stepAIC(resfull2,direction="backward")
res2<-lm(logbb~studio+release_year+genre1+mpaa+rating+runt+per+as.factor(sh)+lgdir_win+lgst1_win +lgst1_nomi,na.omit(da))
summary(res2)
AIC(res2)
da$dir<-log(0.75*da$dir_win+0.25*da$dir_nomi)
da$st1<-log(0.75*da$st1_win+0.25*da$st1_nomi)
da$st2<-log(0.75*da$st2_win+0.25*da$st2_nomi)
hist(da$dir)
qplot(da$dir, geom="histogram",stat="count")
hist(da$st1)
resnew<-lm(logadjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+dir+st1+st2,na.omit(da))
summary(resnew)
AIC(resnew)
step3<-stepAIC(resnew,direction="backward")
res3<-lm(logadjusted ~ studio + release_year + genre1 + rating + runt + per + series + lgadbug,na.omit(da))
summary(res3)
AIC(res3)
resnew2<-lm(logbb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+dir+st1+st2,na.omit(da))
summary(resnew2)
step4<-stepAIC(resnew2,direction="backward")
res4<-lm(logbb ~ studio + release_year + genre1 +mpaa+ rating + per+ dir,na.omit(da))
summary(res4)
AIC(res4)
res5<-lm(adjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi,na.omit(da))
summary(res5)
AIC(res5)
#adjusted R^2 61.86% AIC=75.009 BIC=186.9145
resfull3<-lm(adjusted~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+lgadbug+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi,na.omit(da))
step5<-stepAIC(resfull3,direction="backward")
res5<-lm(adjusted ~ studio + release_year + genre1 + rating + runt + per +
series + dir_win + dir_nomi + st2_win + st2_nomi,na.omit(da))
summary(res5)
AIC(res5)
resfull4<-lm(bb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi,na.omit(da))
step6<-stepAIC(resfull4,direction="backward")
res6<-lm(bb ~ studio + release_year + genre1 + mpaa + rating + runt,na.omit(da))
summary(res6)
AIC(res6)
summary(res1)
layout(matrix(c(1,2,3,4),2,2))
plot(res1,cex=0.5)
frmla<-bb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+rn+to_rating+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi
frm2<-bb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+rn+to_rating+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi
fit<-rpart(frmla,method="anova",data=da,minbucket=10)
library(rpart)
fit<-rpart(frmla,method="anova",data=da,minbucket=10)
printcp(fit)
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
rpart.plot(fit)
library(rpart.plot)
rpart.plot(fit)
par(mfrow=c(1,1))
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
rpart.plot(fit)
plot(predict(fit),col="blue")
points(da$bb,col="red")
library(randomForest)
forestModel=randomForest(frmla,data=na.omit(da),ntree=20,importance=T)
vu = varUsed(forestModel, count=TRUE)
vusorted = sort(vu, decreasing = FALSE, index.return = TRUE)
dotchart(vusorted$x, names(forestModel$forest$xlevels[vusorted$ix]))
varImpPlot(forestModel)
ggplot(df,aes(x=adjusted)) +
geom_histogram(data=df[df$shb==0,]),fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(df, aes(factor(sh),adjusted))+geom_boxplot(aes(fill = factor(sh)))
ggplot(df,aes(x=adjusted))+
geom_histogram(data=df[df$shb==0,]),fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(df,aes(x=adjusted))+
geom_histogram(data=df[df$shb==0,],fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(melt(corr_table2), aes(x=Var1, y=Var2, fill=value))+geom_tile()
boot <- boot.relimp(res1, b = 1000, type = c("lmg",  "last", "first", "pratt"), rank = TRUE,
diff = TRUE, rela = TRUE)
install.packages("relaimpo")
library(relaimpo)
boot <- boot.relimp(res1, b = 1000, type = c("lmg",  "last", "first", "pratt"), rank = TRUE, diff = TRUE, rela = TRUE)
booteval.relimp(boot) # print result
plot(booteval.relimp(boot,sort=TRUE)) # plot result
calc.relimp(res1,type=c("lmg","last","first","pratt"),rela=TRUE)
deviance(res1)
library(rpart)
library(rpart.plot)
frmla<-bb~studio+release_year+genre1+mpaa+rating+runt+per+sh+series+rn+to_rating+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi
fit<-rpart(frmla,method="anova",data=da,minbucket=10)
plotcp(fit) # visualize cross-validation results
summary(fit) # detailed summary of splits
library(tree)
frmla_tree<-bb~mpaa+rating+runt+per+sh+series+rn+to_rating+dir_win+dir_nomi+st1_win+st1_nomi+st2_win+st2_nomi+genre1
tree<-tree(frmla_tree,data=da)
summary(tree)
plot(tree);text(tree)
tree<-tree(bb~.,data=da)
tree<-tree(frmla_tree,data=da)
summary(tree)
library(caret)
library(e1071)
numFolds = trainControl(method="cv", number=5)
cpGrid = expand.grid(.cp = seq(0.01,0.5,0.01))
train(frmla, data=da , method="rpart", trControl=numFolds, tuneGrid = cpGrid)
da[,1:3]
predictions_forest<-predict(randomForest)
predictions_forest<-predict(randomForest,da[,1])
predictions_forest<-predict(randomForest,da)
predict_tree<-predict(fit,da[,])
predictions<-predict(fit, test.set, type="class")
predict_tree<-predict(fit,da[,])
tree_rmse<-mean((predict_tree-da$adjusted)^2)
View(da)
View(da)
tree_rmse<-(predict_tree-da$bb)^2
tree_rmse<-mean((predict_tree-da$bb)^2)
tree_rmse<-(predict_tree-da$bb)^2
predictions_forest<-predict(randomForest,da[,])
predict_forest<-predict(randomForest,da[,1:])
predict_forest<-predict(randomForest,da)
predict_tree<-predict(fit,da[,])
predict_tree<-predict(fit,da)
tree_rmse<-mean((predict_tree-da$bb)^2,na.omit)
tree_rmse<-mean((predict_tree-da$bb)^2)
print(forestModel)
tree_rmse<-(predict_tree-da$bb)^2
tree_rmse<-mean((predict_tree-da$bb)^2,na.rm=TRUE)
mean(summary(res1)$residuals^2)
mean(res1$residuals^2) #0.051
deviance(res1)
print(forestModel)
forestModel=randomForest(frmla,da,ntree=20,importance=T)
forestModel=randomForest(frmla,na.omit(da),ntree=20,importance=T)
print(forestModel)
forestModel=randomForest(frmla,na.omit(da),ntree=50,importance=T)
print(forestModel)
forestModel=randomForest(frmla,na.omit(da),ntree=500,importance=T)
print(forestModel)
vu = varUsed(forestModel, count=TRUE)
vusorted = sort(vu, decreasing = FALSE, index.return = TRUE)
dotchart(vusorted$x, names(forestModel$forest$xlevels[vusorted$ix]))
varImpPlot(forestModel)
predict_forest<-predict(randomForest,da)
print(forestModel)
summary(res1)
print(forestModel)
summary(tree)
summary(fit) # detailed summary of splits
rpart.plot(fit)
varImpPlot(forestModel)
library("devtools")
library("knitr")
library("ggplot2")
library("easyGgplot2")
img.width <- 450
img.height <- 300
options(RCHART_HEIGHT = img.height, RCHART_WIDTH = img.width)
opts_chunk$set(fig.width=6, fig.height=4)
par(mfrow=c(1,1))
ggplot2.histogram(data=df[as.numeric(df$release_year)>1999,], xName='adjusted',groupName='release_year', legendPosition="top")
library(scales)
ggplot(dtam,aes(x=variable,y=value,fill =ind)) + geom_bar(position = "fill",stat = "identity")+
scale_y_continuous(labels = percent_format())
hist(df$domestic,col='lightblue',xlim=c(0,800),breaks=50,border=F,main = paste("Histogram of Movie Financials-domestic adjusted VS unadjusted"))
hist(df$adjusted,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
ggplot(df[df$release_year>2000,], aes(release_year, fill=studio)) + geom_bar(position="dodge")
ggplot(df, aes(per, fill=genre1)) + geom_bar(position="dodge")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=sum,position=position_dodge(),geom="bar")
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(genre1)), color=factor(genre1)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
ggplot(df,aes(x=adjusted))+
geom_histogram(data=df[df$shb==0,],fill = "pink", alpha = 0.2) +
geom_histogram(data=df[df$shb==1,],fill = "blue", alpha = 0.2)
ggplot(df, aes(factor(sh),adjusted))+geom_boxplot(aes(fill = factor(sh)))
ggplot(df, aes(factor(series),adjusted))+geom_boxplot(aes(fill = factor(series)))
hist(df$rating,col='lightblue',xlim=c(0,10),breaks=20,border=F,main=paste("Histogram of Movie ratings"))
hist(df$to_rating/10,col=scales::alpha('pink',.5),xlim=c(0,10),breaks=20,add=T,border=F)
library(ggplot2)
library(plyr)
top<-subset(df,number<=50, select = c(rank,worldwide, domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))
top$rank <- with(top, reorder(rank, adjusted))
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
ggplot(top.m, aes(variable,rank)) + geom_tile(aes(fill = rescale),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
corr_table2<-round(cor(subset(na.omit(da),select=c(adjusted,adow,adbudget,theater,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))),2)
ggplot(melt(corr_table2), aes(x=Var1, y=Var2, fill=value))+geom_tile()
qplot(da$adjusted, geom="histogram",stat="count")
qplot(da$logadjusted, geom="histogram",stat="count")
View(da)
View(da)
da<-read.table("modeling.txt",header=T)
data =read.delim("undo_data.txt", header =T,sep="\t")
data =read.delim("data/undo_data.txt", header =T,sep="\t")
library("ggplot2")
library(scales)
perbar=function(xx){
q=ggplot(data=data.frame(xx),aes(x=xx))+
geom_bar(aes(y = (..count..)),fill="orange")+
geom_text(aes(y = (..count..),label =   ifelse((..count..)==0,"",scales::percent((..count..)/sum(..count..)))), stat="bin",colour="darkgreen")
q
}
perbar(df$release_year)
library("ggplot2")
library("easyGgplot2")
library(scales)
perbar=function(xx){
q=ggplot(data=data.frame(xx),aes(x=xx))+
geom_bar(aes(y = (..count..)),fill="orange")+
geom_text(aes(y = (..count..),label =   ifelse((..count..)==0,"",
scales::percent((..count..)/sum(..count..)))), stat="bin",colour="darkgreen")
q
}
perbar(da$release_year)
load("~/Downloads/LexieProject/Rproject/.RData")
load("~/Downloads/LexieProject/Rproject/.RData")
inf<-read.csv("data/inflation.csv",header =T)
left: 70%
<img src="pics/over seas market.jpeg" style="background-color:transparent; border:0px; box-shadow:none;margin-left:100px,margin-top:20pc"></img>
kable(head(df[1:2,]), format = "markdown")
View(df)
View(df)
ggplot(df, aes(factor(sh),adjusted))+geom_boxplot(aes(fill = factor(sh)))
summary(res1)
print(forestModel)
