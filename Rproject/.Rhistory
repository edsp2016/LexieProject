df$genre1[479]<-"Comedy"
df$theater[479]<-NA
df$release_year<-as.numeric(df$release_year)
```
##3. create  variables
3.1 Period
* summer season(ss):late May- late Aug (5-20,8-31)
* holiday season(hs):late Nov- Jan (11-20,1-7)
* other: (ns)
```{r}
df$period<-as.POSIXct(strptime(df$release_date,"%B %d"))
df$per<- ifelse((df$period>=as.POSIXct(as.character("2016-05-20")))&
(df$period<=as.POSIXct(as.character("2016-08-31"))),"ss",df$period)
df$per<- ifelse((df$period>=as.POSIXct(as.character("2016-11-20")))|
(df$period<=as.POSIXct(as.character("2016-01-07"))),"hs",df$per)
df$per<- ifelse((df$per!="ss")&(df$per!= "hs"),"ns",df$per)
df$period<-NULL
```
3.2 Super hero movies
Create a label to distinguish super hero movie or not ($hero)
1. BV
+ marvel's avengers
+ iron man
+ guardians of the galaxy
+ the incredibles
+ captain america
+ big hero
+ ant-man
+ unbreakable
+ skyhigh
2. WB
+ the dark knight
+ man of steel
+ batman
+ superman
+ watchmen
+ greenlaten
+ catwoman
3. Sony
+ spiderman
+ hancock
4. Fox
+ deadpool
+ x_men
+ fantastic four
5. Par.
+ ironman
```{r}
df$title1<-df$title
df$title1<-gsub("Episode III","",df$title1)
df$title1<-gsub("Episode II","",df$title1)
df$title1<-gsub("Episode I","",df$title1)
df$title1<-gsub("-","",df$title1)
df$title1<-gsub(",","",df$title1)
df$title1<-tolower(df$title1)
df$title1<-gsub(" ","",df$title1)
b1<-union(grep(("avengers"),df$title1),grep("ironman",df$title1))
b2<-union(grep("guardiansofthegalaxy",df$title1),grep("theincredibles",df$title1))
b3<-union(grep("captainamerica",df$title1),grep("bighero",df$title1))
b4<-union(b3,grep("antman",df$title1))
b5<-union(b1,b2)
bv<-union(b4,b5)
#WB=2
w1<-union(grep("thedarkknight",df$title1),grep("manofsteel",df$title1))
w2<-union(grep("batman",df$title1),grep("superman",df$title1))
wb<-union(w1,w2)
#Sony=3
sony<-union(grep("spiderman",df$title1),grep("hancock",df$title1))
#Fox=4
fox<-union(grep("xmen",df$title1),grep("fantasticfour",df$title1))
#Par.=5
par<-grep("ironman",df$title1)
#create superhero variable
df$sh<-0
df$sh[bv]<-1
df$sh[wb]<-2
df$sh[sony]<-3
df$sh[fox]<-4
df$sh[par]<-5
table(df$sh)
```
3.3 Series movie
Create a label to distinguish a series moive or not ($series)
```{r}
df$series<-substr(df$title,nchar(df$title),nchar(df$title))
df$series[543]<-0
part<-grep("Part",df$title)
episode<-grep("Episode",df$title)
s23<-union(grep("2",df$series),grep("3",df$series))
s45<-union(grep("4",df$series),grep("5",df$series))
s67<-union(grep("6",df$series),grep("7",df$series))
U<-union(part,episode)
U<-sort(union(union(s23,s45),union(s67,U)),F)
colon<-grep(":",df$title)
se<-union(U,colon)
#134 series movies
df$series[se]<-1
df$series<-ifelse(df$series==1,1,0)
table(df$series)
```
3.4 Add indexed from Rotten tomatoes
+ rotten tomatoes rating
+ number of reviews
```{r,echo=FALSE}
toma<-read.table("/Users/mac/Dropbox/EDSP/rt.txt", header =T,sep="\t")
toma$title<-as.character(toma$title)
toma$title[182]<-"Léon: The Professional"
toma$title[228]<-"The City of Lost Children"
toma$title[350]<-"Life Is Beautiful"
toma$title[437]<-"Live Flesh"
toma$title[479]<-"Apt Pupil"
toma$title[617]<-"Aimée & Jaguar"
toma$title[629]<-"Nico and Dani"
toma$title[663]<-"Code Unknown"
toma$title[724]<-"Amélie"
toma$title[734]<-"Kandahar: Le soleil derrière la lune"
toma$title[745]<-"Comment j'ai tué mon père"
toma$title[922]<-"The Best of Youth"
toma$title[957]<-"Noi the Albino"
toma$title1<-toma$title
toma$title1<-gsub("Episode VII","",toma$title1)
toma$title1<-gsub("Episode VI","",toma$title1)
toma$title1<-gsub("Episode V","",toma$title1)
toma$title1<-gsub("Episode III","",toma$title1)
toma$title1<-gsub("Episode I","",toma$title1)
toma$title1<-gsub("-","",toma$title1)
toma$title1<-gsub(",","",toma$title1)
toma$title1<-gsub("\\)","",toma$title1)
toma$title1<-tolower(gsub(" ","",toma$title1))
#using movie name to match rotten tomatoes data with my own dataset
tomaid<-rep(c(0),nrow(df))
for (i in (1:nrow(df))){
if (length(grep(df$title1[i],toma$title1))>0){
tomaid[i]=grep(df$title1[i],toma$title1)
}
}
tomaid[60]<- 0
tomaid[181]<-0
for (i in (1:nrow(df))){
if (tomaid[i]>0){
df$rn[i]<-toma$reviewnum[tomaid[i]]
df$to_rating[i]<-toma$tomato_rating[tomaid[i]]
}
else {
df$rn[i]<-0
df$to_rating[i]<-0
}
}
sum(df$rn>0)
#306/631 has the rotten indexes
```
3.5 Create boxoffice/budget variable: bb
```{r}
df$bb<-round(df$domestic/df$budget,2)
summary(df$bb)
```
3.6 Adjusted for inflation (modeling I)
```{r}
inf<-read.csv("/Users/mac/Dropbox/EDSP/inflation.csv",header =T)
inf$avg<-gsub("\\$","",inf$Avg..Price)
inf$Avg..Price<-NULL
df$price<-0
for (i in 2:nrow(inf)){
df$price[grep(inf$Year[i],df$release_year)]<-inf$avg[i]
}
df$adjusted<-8.7*df$domestic/as.numeric(df$price)
df$adow<-round(8.7*df$ow/as.numeric(df$price),2)
df$adbudget<-round(8.7*df$budget/as.numeric(df$price),2)
df$adjusted<-round(df$adjusted,2)
```
3.7 Quantify movie people data
```{r}
imdb<-read.delim("/Users/mac/Dropbox/EDSP/IMDb.txt",header=T)
imdb<-imdb[-634,]
df$dir_win<-imdb$dir_win
df$dir_nomi<-imdb$dir_nomi
df$st1_win<-imdb$st1_won
df$st2_win<-imdb$st2_won
df$st1_nomi<-imdb$st1_nomi
df$st2_nomi<-imdb$st2_nomi
df$st1_nomi<-as.numeric(as.character(df$st1_nomi))
#people<-read.delim("/Users/mac/Dropbox/EDSP/people0424.txt",header=T)
#df$dir_num=rep(0,633)
#df$dir_avg=rep(0,633)
#dir_num=rep(0,633)
#for (i in (1:633)){
#dir_num[i]=grep(df$director1[i],people$person)
#}
#lapply(df, class)
```
3.8 missing data
```{r}
df$rn[df$rn==0]<-NA
df$to_rating[df$to_rating==0]<-NA
```
3.9 save data and select useful variables for modeling
```{r}
summary(df)
write.table(df,"/Users/mac/Dropbox/EDSP/alldata.txt")
da<-subset(df,select=c(adjusted,studio,release_year,genre,mpaa,theater,rating,runt,per,sh,series,rn,to_rating,bb,adjusted,adbudget,adow,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))
write.table(da,"/Users/mac/Dropbox/EDSP/modeling.txt")
```
# Part II Data visualization and descriptive analysis
## necessary visualization R packages
```{r}
library("devtools")
#install.packages("ggvis")
#install.packages("googleVis")
#install_github("ramnathv/rCharts")
#install_github("ropensci/plotly")
#install.packages("dplyr")
#install.packages("tidyr")
#install.packages("knitr")
# Load packages
library("ggvis")
library("googleVis")
library("rCharts")
library("plotly")
library("dplyr")
library("tidyr")
library("knitr")
install_github("easyGgplot2", "kassambara")
library("easyGgplot2")
```
## Setting up
```{r}
# Define image sizes
img.width <- 450
img.height <- 300
options(RCHART_HEIGHT = img.height, RCHART_WIDTH = img.width)
opts_chunk$set(fig.width=6, fig.height=4)
# Plotly needs some setting up (using the credentials from here).
# Plotly requires authentication
py <- plotly("RgraphingAPI", "ektgzomjbx")
```
## Movie financials visualization
## Movie industry expansion and globalization
Some visualizations are made in order to have a direct understanding of how the movie industry grows in recent years
A. The industry grows rapidly in recent decades
```{r}
library(scales)
perbar=function(xx){
q=ggplot(data=data.frame(xx),aes(x=xx))+
geom_bar(aes(y = (..count..)),fill="orange")+
geom_text(aes(y = (..count..),label =   ifelse((..count..)==0,"",scales::percent((..count..)/sum(..count..)))), stat="bin",colour="darkgreen")
q
}
perbar(df$release_year)
ggplot2.histogram(data=df, xName='worldwide',groupName='release_year', legendPosition="top")
ggplot2.histogram(data=df[as.numeric(df$release_year)>1979,], xName='worldwide',groupName='release_year', legendPosition="top")
ggplot2.histogram(data=df[as.numeric(df$release_year)>1979,], xName='adjusted',groupName='release_year', legendPosition="top")
```
For more than 600 movies ranked by global box office revenues over 7 decades, most of them are released after year 2000. There might be several reasons:
1. There is a price inflation over time
2. Movie industry keeps booming, watching movie has become one important entertainment in people's daily life.
3.There is a raid overseas movie markets expansion since 21st century.
In order to prove 1 and 2, we use the adjusted data which eliminates price inflation and only focuses on domestic market to see the bar color changes.
It seems that hypothesis 2 holds.
In order to have a general understanding of the overseas market effect, some visulizations are made:
(For the barplot, I just use movies released from year 1980)
B. Overseas markets expands after year 1987
```{r}
plot(df$worldwide,type = "s",main="Movie Financials Plot")
points(df$domestic,col="red",cex = 0.1)
points(df$overseas,col="blue",type = "l")
legend("topleft",legend=c("worldwide box office","domestic box office","oversea box office"),lty=c(1,0),col=c("black","red","blue"))
#?#qplot(df$worldwide, geom="histogram",stat="count")
percen<-rep(0,37)
for (i in 1980:2016){
sum(df$domestic[df$release_year==i])
percen[i-1979]=sum(df$domestic[df$release_year==i])/sum(df$worldwide[df$release_year==i])
}
overseas<-1-percen
dta <- read.table(text = "    1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2010 2011 2012 2013 2014 2015 2016
1   0.363  0.637 0.549 0.651 0.695 0.490 0.518 0.410 0.475 0.497 0.472 0.434 0.448 0.430 0.420 0.390 0.415 0.372 0.434 0.433 0.493 0.452 0.452 0.419 0.443 0.452 0.412 0.413 0.376 0.356 0.376 0.369 0.340 0.366 0.379
2   0.637  0.363 0.451 0.349 0.305 0.510 0.482 0.590 0.525 0.503 0.528 0.566 0.452 0.571 0.580 0.610 0.585 0.628 0.566 0.567 0.507 0.548 0.548 0.581 0.557 0.575 0.588 0.587 0.624 0.645 0.624 0.631 0.660 0.634 0.621",sep = "",header = TRUE)
library(reshape2)
dtam <- melt(cbind(dta, ind = rownames(dta)), id.vars = c('ind'))
ggplot(dtam,aes(x=variable,y=value,fill =ind)) +
geom_bar(position = "fill",stat = "identity") +
scale_y_continuous(labels = percent_format())
```
The first plot shows that there is always a highly positive correlation between domestic and international box office revenue.
The second plot (percentage par plot) shows there is an increaing trend in overseas market shares, and starts from year 1987, the average overseas market shares exceeds 50%, and keeps increasing till now.
C. The effect of price inflation
```{r]}
hist(df$domestic,col='lightblue',xlim=c(0,800),breaks=50,border=F,main = paste("Histogram of Movie Financials-domestic adjusted VS unadjusted"))
hist(df$adjusted,col=scales::alpha('pink',.5),xlim=c(0,800),breaks=500,add=T,border=F)
```
D. The effect of studio and period
```{r}
#barplot(table(df$studio))
ggplot(df,aes(x=factor(per),y=adjusted,fill=factor(studio)), color=factor(studio)) +
stat_summary(fun.y=mean,position=position_dodge(),geom="bar")
#ggplot2.histogram(data=df, xName='adjusted',groupName='studio',legendPosition="top")
```
*E. The influence of directors and stars
```{r}
dirlist<-df$number[unique(df$director1)]
dta<-data.frame(df$director1[dirlist],df$dir_win[dirlist],df$dir_nomi[dirlist])
names(dta)[1]<-paste("name")
names(dta)[2]<-paste("winning")
names(dta)[3]<-paste("nomitation")
library(ggplot2)
library(plyr)
dta.m<-melt(dta)
dta.m <- ddply(dta.m,.(variable),transform,rescale = rescale(value))
ggplot(dta.m, aes(variable,name)) + geom_tile(aes(fill = rescale),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
```
F Movie ratings
```{r}
hist(df$rating,col='lightblue',xlim=c(0,10),breaks=20,border=F,main=paste("Histogram of Movie ratings"))
hist(df$to_rating/10,col=scales::alpha('pink',.5),xlim=c(0,10),breaks=20,add=T,border=F)
```
G Movie financials
Top 50 movies so far
```{r}
top<-subset(df,number<=50, select = c(rank,worldwide, domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))
top$rank <- with(top, reorder(rank, adjusted))
top.m <- ddply(melt(top), .(variable), transform,rescale = rescale(value))
ggplot(top.m, aes(variable,rank)) + geom_tile(aes(fill = rescale),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
#correlation matrix and heatmap
corr_table<-round(cor(subset(na.omit(df),select=c(worldwide,domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))),2)
ggplot(melt(corr_table), aes(x=Var1, y=Var2, fill=value))+geom_tile()
```
budget,revenue (adjusted) barplot, ratio;
```{r}
hist(df$bb,col='purple2',border=F,xlim=c(0,20),breaks=100,main = paste("Histogram of revenue/budget ratio"))
qplot(df$adjusted, geom="histogram",stat="count")
qplot(df$bb, geom="histogram",stat="count")
ggplot(df, aes(x=adjusted))+geom_histogram(binwidth=10)
```
```{r}
```
```{r}
```
```{r}
```
```{r}
hist.rcharts <- rPlot(x="bin(rating,1)", y="count(id)", data, type="bar")
hist.rcharts$print(include_assets=TRUE)
#py$ggplotly(hist.ggplot, session="knitr")
```
| HolidaySeason | SummerSeason |    Other    |
|:-------------:|:------------:|:-----------:|
|      130      |     227      |     275     |
| PG-13 |  PG   |   R   |   G   |
|:-----:|:-----:|:-----:|:-----:|
|   293 |  151  |  148  |  39   |
View(df)
View(df)
toma<-read.table("/Users/mac/Dropbox/EDSP/rt.txt", header =T,sep="\t")
toma$title<-as.character(toma$title)
toma$title[182]<-"Léon: The Professional"
toma$title[228]<-"The City of Lost Children"
toma$title[350]<-"Life Is Beautiful"
toma$title[437]<-"Live Flesh"
toma$title[479]<-"Apt Pupil"
toma$title[617]<-"Aimée & Jaguar"
toma$title[629]<-"Nico and Dani"
toma$title[663]<-"Code Unknown"
toma$title[724]<-"Amélie"
toma$title[734]<-"Kandahar: Le soleil derrière la lune"
toma$title[745]<-"Comment j'ai tué mon père"
toma$title[922]<-"The Best of Youth"
toma$title[957]<-"Noi the Albino"
toma$title1<-toma$title
toma$title1<-gsub("Episode VII","",toma$title1)
toma$title1<-gsub("Episode VI","",toma$title1)
toma$title1<-gsub("Episode V","",toma$title1)
toma$title1<-gsub("Episode III","",toma$title1)
toma$title1<-gsub("Episode I","",toma$title1)
toma$title1<-gsub("-","",toma$title1)
toma$title1<-gsub(",","",toma$title1)
toma$title1<-gsub("\\)","",toma$title1)
toma$title1<-tolower(gsub(" ","",toma$title1))
tomaid<-rep(c(0),nrow(df))
for (i in (1:nrow(df))){
if (length(grep(df$title1[i],toma$title1))>0){
tomaid[i]=grep(df$title1[i],toma$title1)
}
}
tomaid[60]<- 0
tomaid[181]<-0
for (i in (1:nrow(df))){
if (tomaid[i]>0){
df$rn[i]<-toma$reviewnum[tomaid[i]]
df$to_rating[i]<-toma$tomato_rating[tomaid[i]]
}
else {
df$rn[i]<-0
df$to_rating[i]<-0
}
}
sum(df$rn>0)
View(toma)
View(toma)
class(toma$rating)
class(toma$tomato_rating)
as.character(toma$tomato_rating)
as.numeric(as.character(toma$tomato_rating))
toma$tomato_rating<-gsub("\\%",toma$tomato_rating)
toma$tomato_rating<-gsub("%",toma$tomato_rating)
View(toma)
View(toma)
toma$tomato_rating<-gsub("//%",toma$tomato_rating)
toma$tomato_rating<-gsub("//%","",toma$tomato_rating)
View(toma)
View(toma)
toma$tomato_rating<-gsub("%","",toma$tomato_rating)
View(toma)
View(toma)
toma$tomato_rating<-as.numeric(as.character(toma$tomato_rating))
View(toma)
View(toma)
toma$title1<-gsub("Episode VII","",toma$title1)
toma$title1<-gsub("Episode VI","",toma$title1)
toma$title1<-gsub("Episode V","",toma$title1)
toma$title1<-gsub("Episode III","",toma$title1)
toma$title1<-gsub("Episode I","",toma$title1)
toma$title1<-gsub("-","",toma$title1)
toma$title1<-gsub(",","",toma$title1)
toma$title1<-gsub("\\)","",toma$title1)
toma$title1<-tolower(gsub(" ","",toma$title1))
tomaid<-rep(c(0),nrow(df))
for (i in (1:nrow(df))){
if (length(grep(df$title1[i],toma$title1))>0){
tomaid[i]=grep(df$title1[i],toma$title1)
}
}
tomaid[60]<- 0
tomaid[181]<-0
for (i in (1:nrow(df))){
if (tomaid[i]>0){
df$rn[i]<-toma$reviewnum[tomaid[i]]
df$to_rating[i]<-toma$tomato_rating[tomaid[i]]
}
else {
df$rn[i]<-0
df$to_rating[i]<-0
}
}
sum(df$rn>0)
View(df)
View(df)
df$title1<-df$title
df$title1<-gsub("Episode III","",df$title1)
df$title1<-gsub("Episode II","",df$title1)
df$title1<-gsub("Episode I","",df$title1)
df$title1<-gsub("-","",df$title1)
df$title1<-gsub(",","",df$title1)
df$title1<-tolower(df$title1)
df$title1<-gsub(" ","",df$title1)
b1<-union(grep(("avengers"),df$title1),grep("ironman",df$title1))
b2<-union(grep("guardiansofthegalaxy",df$title1),grep("theincredibles",df$title1))
b3<-union(grep("captainamerica",df$title1),grep("bighero",df$title1))
b4<-union(b3,grep("antman",df$title1))
b5<-union(b1,b2)
bv<-union(b4,b5)
#WB=2
w1<-union(grep("thedarkknight",df$title1),grep("manofsteel",df$title1))
w2<-union(grep("batman",df$title1),grep("superman",df$title1))
wb<-union(w1,w2)
#Sony=3
sony<-union(grep("spiderman",df$title1),grep("hancock",df$title1))
#Fox=4
fox<-union(grep("xmen",df$title1),grep("fantasticfour",df$title1))
#Par.=5
par<-grep("ironman",df$title1)
#create superhero variable
df$sh<-0
df$sh[bv]<-1
df$sh[wb]<-2
df$sh[sony]<-3
df$sh[fox]<-4
df$sh[par]<-5
table(df$sh)
df$series<-substr(df$title,nchar(df$title),nchar(df$title))
df$series[543]<-0
part<-grep("Part",df$title)
episode<-grep("Episode",df$title)
s23<-union(grep("2",df$series),grep("3",df$series))
s45<-union(grep("4",df$series),grep("5",df$series))
s67<-union(grep("6",df$series),grep("7",df$series))
U<-union(part,episode)
U<-sort(union(union(s23,s45),union(s67,U)),F)
colon<-grep(":",df$title)
se<-union(U,colon)
#134 series movies
df$series[se]<-1
df$series<-ifelse(df$series==1,1,0)
table(df$series)
tomaid<-rep(c(0),nrow(df))
for (i in (1:nrow(df))){
if (length(grep(df$title1[i],toma$title1))>0){
tomaid[i]=grep(df$title1[i],toma$title1)
}
}
tomaid[60]<- 0
tomaid[181]<-0
for (i in (1:nrow(df))){
if (tomaid[i]>0){
df$rn[i]<-toma$reviewnum[tomaid[i]]
df$to_rating[i]<-toma$tomato_rating[tomaid[i]]
}
else {
df$rn[i]<-0
df$to_rating[i]<-0
}
}
sum(df$rn>0)
corr_table<-round(cor(subset(na.omit(df),select=c(worldwide,domestic,overseas,adjusted,adow,adbudget,theater,weeks,bb,rating,to_rating,rn,runt,dir_win,dir_nomi,st1_win,st1_nomi,st2_win,st2_nomi))),2)
